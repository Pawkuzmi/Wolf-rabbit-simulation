/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mmm2;


import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTextField;



/**
 *
 * @author PawełKuźmicki
 */
public class Frame extends javax.swing.JFrame {

    /**
     * Creates new form Frame
     */
    public Frame() {
        initComponents();
        simulationCounter = 1;
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        optionPanel = new javax.swing.JPanel();
        turnsLabel = new javax.swing.JLabel();
        turnsTextField = new javax.swing.JTextField();
        playgroundLabel = new javax.swing.JLabel();
        playgroundSizeTextField = new javax.swing.JTextField();
        wolvesLabel = new javax.swing.JLabel();
        wolvesAmountTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        rabbitAmountTextField = new javax.swing.JTextField();
        movementWolfLabel = new javax.swing.JLabel();
        wolfMovementTextField = new javax.swing.JTextField();
        movementRabbitLabel = new javax.swing.JLabel();
        rabbitMovementTextField = new javax.swing.JTextField();
        proliferationWolfLabel = new javax.swing.JLabel();
        proliferationWolfTextField = new javax.swing.JTextField();
        proliferationRabbitLabel = new javax.swing.JLabel();
        proliferationRabbitTextField = new javax.swing.JTextField();
        hungerWolfLabel = new javax.swing.JLabel();
        hungerWolfTextField = new javax.swing.JTextField();
        startButton = new javax.swing.JButton();
        chartPanel = new javax.swing.JPanel();
        chartLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(900, 400));

        optionPanel.setPreferredSize(new java.awt.Dimension(200, 300));
        optionPanel.setLayout(new java.awt.GridLayout(0, 2));

        turnsLabel.setText("Liczba kolejek:");
        optionPanel.add(turnsLabel);
        optionPanel.add(turnsTextField);

        playgroundLabel.setText("Świat (NxN)");
        playgroundLabel.setPreferredSize(new java.awt.Dimension(111, 14));
        optionPanel.add(playgroundLabel);
        optionPanel.add(playgroundSizeTextField);

        wolvesLabel.setText("Liczba wilków:");
        optionPanel.add(wolvesLabel);
        optionPanel.add(wolvesAmountTextField);

        jLabel2.setText("Liczba zajęcy:");
        optionPanel.add(jLabel2);
        optionPanel.add(rabbitAmountTextField);

        movementWolfLabel.setText("Ruch wilka: ");
        optionPanel.add(movementWolfLabel);
        optionPanel.add(wolfMovementTextField);

        movementRabbitLabel.setText("Ruch zająca:");
        optionPanel.add(movementRabbitLabel);
        optionPanel.add(rabbitMovementTextField);

        proliferationWolfLabel.setText("Prokreacja wilka:");
        optionPanel.add(proliferationWolfLabel);
        optionPanel.add(proliferationWolfTextField);

        proliferationRabbitLabel.setText("Prokreacja zająca:");
        optionPanel.add(proliferationRabbitLabel);
        optionPanel.add(proliferationRabbitTextField);

        hungerWolfLabel.setText("Max. głód wilka:");
        optionPanel.add(hungerWolfLabel);
        optionPanel.add(hungerWolfTextField);

        startButton.setText("Start");
        startButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                startButtonMouseReleased(evt);
            }
        });
        optionPanel.add(startButton);

        getContentPane().add(optionPanel, java.awt.BorderLayout.LINE_START);

        javax.swing.GroupLayout chartPanelLayout = new javax.swing.GroupLayout(chartPanel);
        chartPanel.setLayout(chartPanelLayout);
        chartPanelLayout.setHorizontalGroup(
            chartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(chartPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chartLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE)
                .addContainerGap())
        );
        chartPanelLayout.setVerticalGroup(
            chartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(chartPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chartLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(chartPanel, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startButtonMouseReleased
        int turnsNumber = 0,
                worldSize = 0,
                wolvesNumber = 0,
                rabbitNumber = 0,
                wolvesMovement = 0,
                rabbitMovement = 0,
                wolvesProliferation = 0,
                rabbitProliferation = 0,
                wolvesHunger = 0;
        
        try{
            
            wolvesProliferation = getDataFromTextField(proliferationWolfTextField);
            rabbitProliferation = getDataFromTextField(proliferationRabbitTextField);
            
            turnsNumber = getDataFromTextField(turnsTextField);
            worldSize = getDataFromTextField(playgroundSizeTextField);
            
            wolvesNumber = getDataFromTextField(wolvesAmountTextField);
            rabbitNumber = getDataFromTextField(rabbitAmountTextField);
        
            wolvesMovement = getDataFromTextField(wolfMovementTextField);
            rabbitMovement = getDataFromTextField(rabbitMovementTextField);
        
            wolvesHunger = getDataFromTextField(hungerWolfTextField);
        }
        catch(NumberFormatException exception){
            JOptionPane.showMessageDialog (null, "Nie wprowadzono liczby", "Błąd", JOptionPane.WARNING_MESSAGE);
            return;
        }
                
                
        if(turnsNumber == -1 || worldSize == -1 || wolvesNumber == -1 || rabbitNumber == -1
                || wolvesMovement == -1 || rabbitMovement == -1 || wolvesProliferation == -1
                || rabbitProliferation == -1 || wolvesHunger == -1){
                
            JOptionPane.showMessageDialog (null, "Wprowadzono liczbę ujemną", "Błąd", JOptionPane.WARNING_MESSAGE);

        }
        
        else if(wolvesNumber + rabbitNumber >= worldSize*worldSize){
            JOptionPane.showMessageDialog (null, "Za dużo zwierząt jak na takie małe pole gry", "Błąd", JOptionPane.WARNING_MESSAGE);
        }
        
        else if(wolvesProliferation == 0 || rabbitProliferation == 0){
            JOptionPane.showMessageDialog (null, "Prokreacja nie może odbywać się co 0 kolejek", "Błąd", JOptionPane.WARNING_MESSAGE);
        }
        
        else {
            simulation = new Simulation(turnsNumber, worldSize, wolvesNumber, rabbitNumber, wolvesMovement,
                    rabbitMovement, wolvesProliferation, rabbitProliferation, wolvesHunger ) ;
            
            drawChart();
            
        }
        
    }//GEN-LAST:event_startButtonMouseReleased

    private int getDataFromTextField(JTextField textField) throws  NumberFormatException{
        String data =  textField.getText();
        int number;
        number = Integer.parseInt(data);
     /*   try{
            number = Integer.parseInt(data);
        }
        catch(NumberFormatException exception){
            JOptionPane.showMessageDialog (null, "Nie wprowadzono liczby", "Błąd", JOptionPane.WARNING_MESSAGE);
            return -1;
        }
        */
        if(number < 0){
            return -1;
        } 
        
        return number;
    }
    
    private void drawChart() {
    
        chartLabel.setIcon(null);
        String chartFileName = "chart"+ simulationCounter +".jpg" ;
        
        Chart chart = new Chart(simulation.getWolvesSeries(), simulation.getRabbitsSeries());
        chart.createChart(chartLabel, "Tura", "Liczba osobników", chartFileName);
        
        ImageIcon icon = new ImageIcon(chartFileName);
        chartLabel.setIcon(icon);
        
        simulationCounter++;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frame().setVisible(true);
            }
        });
    }

    
    private Simulation simulation;
    private int simulationCounter;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel chartLabel;
    private javax.swing.JPanel chartPanel;
    private javax.swing.JLabel hungerWolfLabel;
    private javax.swing.JTextField hungerWolfTextField;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel movementRabbitLabel;
    private javax.swing.JLabel movementWolfLabel;
    private javax.swing.JPanel optionPanel;
    private javax.swing.JLabel playgroundLabel;
    private javax.swing.JTextField playgroundSizeTextField;
    private javax.swing.JLabel proliferationRabbitLabel;
    private javax.swing.JTextField proliferationRabbitTextField;
    private javax.swing.JLabel proliferationWolfLabel;
    private javax.swing.JTextField proliferationWolfTextField;
    private javax.swing.JTextField rabbitAmountTextField;
    private javax.swing.JTextField rabbitMovementTextField;
    private javax.swing.JButton startButton;
    private javax.swing.JLabel turnsLabel;
    private javax.swing.JTextField turnsTextField;
    private javax.swing.JTextField wolfMovementTextField;
    private javax.swing.JTextField wolvesAmountTextField;
    private javax.swing.JLabel wolvesLabel;
    // End of variables declaration//GEN-END:variables

}
